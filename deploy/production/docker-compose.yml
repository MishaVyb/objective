# PRODUCTION

version: '3.9'

# EVN PATH ./deploy/production/

services:
  db:
    image: postgres:16.2-bullseye
    hostname: db
    ports:
    - "5433:5432"   # NOTE: we bind 5433 to avoid conflicts with popular 5432 port
    env_file:
    - ./deploy/production/.env

    volumes:
    - database16:/var/lib/postgresql/data

    restart: always
    healthcheck:
      test: pg_isready -U ${POSTGRES_DB}
      interval: 2s
      timeout: 3s
      retries: 40

  migrator:
    image: objective:${OBJECTIVE_VERSION:-latest}
    restart: "no"
    command: alembic upgrade head
    env_file:
    - ./deploy/production/.env
    environment:
      OBJECTIVE_DB_HOST: db
      OBJECTIVE_DB_PORT: 5432
    depends_on:
      db:
        condition: service_healthy

  certbot:
    image: certbot/certbot:latest
    env_file:
    - ./deploy/production/.env
    volumes:

    - ./certbot/www/:/var/www/certbot/:rw # UNUSED ???

    # All generated keys and issued certificates can be found in /etc/letsencrypt/live/${domain}
    - ./certbot/conf/:/etc/letsencrypt/:rw

  nginx:
    image: nginx:1.19.3
    ports:
    - "80:80"
    - "443:443"
    volumes:

    # nginx config
    - type: bind
      source: ./deploy/production/nginx.conf
      target: /etc/nginx/conf.d/default.conf

    # frontend build
    - type: bind
      source: ./deploy/production/build
      target: /usr/share/nginx/html/

    # UNUSED ???
    - type: bind
      source: ./certbot/www
      target: /var/www/certbot/

    # certs
    # NOTE:
    # - All generated certs can be found at certbot at /etc/letsencrypt/live/${domain}
    # - We bind those certs to local ./certbot/conf/ PATH
    # - And here we provide them to nginx to common /etc/letsencrypt/
    - type: bind
      source: ./certbot/conf/
      target: /etc/letsencrypt/

    depends_on:
    - migrator

  api:
    build:
      context: .
      dockerfile: ./deploy/production/Dockerfile
      target: prod
    image: objective:${OBJECTIVE_VERSION:-latest}
    ports:
    - "8000:8000"   # for debug or local dev porpuses we bind 8000, but nginx 80/443 is used for production
    restart: always
    env_file:
    - ./deploy/production/.env
    environment:
      OBJECTIVE_HOST: 0.0.0.0
      OBJECTIVE_DB_HOST: db
      OBJECTIVE_DB_PORT: 5432
    depends_on:
      db:
        condition: service_healthy

volumes:
  database16:
    name: database16
