# PRODUCTION

version: '3.9'

# EVN PATH ./deploy/production/

services:
  db:
    image: postgres:13.8-bullseye
    hostname: objective-db
    ports:
    - "5433:5432"
    env_file:
    - ./deploy/production/.env
    environment:
      POSTGRES_PASSWORD: objective
      POSTGRES_USER: objective
      POSTGRES_DB: objective

    volumes:
    - objective-db-data:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test: pg_isready -U objective
      interval: 2s
      timeout: 3s
      retries: 40

  migrator:
    image: objective:${OBJECTIVE_VERSION:-latest}
    restart: "no"
    command: alembic upgrade head
    env_file:
    - ./deploy/production/.env
    environment:
      OBJECTIVE_DB_HOST: objective-db
      OBJECTIVE_DB_PORT: 5432
      OBJECTIVE_DB_USER: objective
      OBJECTIVE_DB_PASS: objective
      OBJECTIVE_DB_BASE: objective
    depends_on:
      db:
        condition: service_healthy

  certbot:
    image: certbot/certbot:latest
    volumes:
    - ./certbot/www/:/var/www/certbot/:rw
    - ./certbot/conf/:/etc/letsencrypt/:rw

  nginx:
    image: nginx:1.19.3
    ports:
    - "80:80"
    - "1234:1234" # debug
    volumes:
    - type: bind
      source: ./deploy/production/nginx.conf
      target: /etc/nginx/conf.d/default.conf

    - type: bind
      source: ./deploy/production/build
      target: /usr/share/nginx/html/

    depends_on:
    - migrator

  api:
    build:
      context: .
      dockerfile: ./deploy/production/Dockerfile
      target: prod
    image: objective:${OBJECTIVE_VERSION:-latest}
    ports:
    - "8000:8000"
    restart: always
    env_file:
    - ./deploy/production/.env
    environment:
      OBJECTIVE_HOST: 0.0.0.0
      OBJECTIVE_DB_HOST: objective-db
      OBJECTIVE_DB_PORT: 5432
      OBJECTIVE_DB_USER: objective
      OBJECTIVE_DB_PASS: objective
      OBJECTIVE_DB_BASE: objective
    depends_on:
      db:
        condition: service_healthy


volumes:
  objective-db-data:
    name: objective-db-data
