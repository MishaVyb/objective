# PROD

# IPv4: 158.160.73.243
# DNS: objective.services

# NOTE
# For local testing use nginx.conf.local

server {
    listen 80;

    server_tokens off;
    server_name 158.160.73.243 objective.services www.objective.services;
    client_max_body_size 20M;

    # certbot
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    location / {
        return 301 https://$server_name$request_uri;
    }


}

server {
    listen 443 default_server ssl;

    server_tokens off;
    server_name 158.160.73.243 objective.services www.objective.services;
    client_max_body_size 20M;

    # NOTE: path to certs configured at docker-compose via volumes binds
    ssl_certificate /etc/letsencrypt/live/objective.services/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/objective.services/privkey.pem;

    location /api/ {
        proxy_pass http://api:8000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location / {
        root /usr/share/nginx/html;
        index index.html index.htm;
        try_files $uri /index.html;
    }
}

# PROXY TO STAGING

# IPv4: (none)
# DNS: staging.objective.services -> staging.objective.services:8008

server {
    listen 80;

    server_tokens off;
    server_name staging.objective.services;
    client_max_body_size 20M;

    # certbot
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    location / {
        return 301 https://$server_name$request_uri;
    }
}

server {
    listen 443 ssl;

    server_tokens off;
    server_name staging.objective.services;
    client_max_body_size 20M;

    # NOTE: path to certs configured at docker-compose via volumes binds
    ssl_certificate /etc/letsencrypt/live/staging.objective.services/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/staging.objective.services/privkey.pem;

    # proxy to staging nginx container
    location / {
        # proxy_pass http://objective.services:8010; # staging API
        proxy_pass http://staging.objective.services:8008; # staging nginx

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
